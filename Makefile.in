#
# From Makefile.in
#

SRC = $(wildcard src/*.c)
LIB_SRC = $(wildcard lib/*.c)

OBJS = $(SRC:.c=.o)

LIB_OBJS = $(LIB_SRC:.c=.o)

COMMIT = "$(shell git log -1 --oneline --decorate=short --no-color || ( echo 'ERROR: unable to get commit hash' >&2 ; echo unknown ) )"

DEFINE_FLAGS += -DCOMMIT_HASH=\"$(COMMIT)\"

ifeq ($(DEBUG), true)
	CFLAGS += -DDEBUG
endif

.PHONY:
$(TARGET): $(SRC)
	$(CC) $(CFLAGS) src/main-ssum.c -lssum.1 -o $(TARGET) $(LDFLAGS)

.PHONY:
install-lib: $(LIB)
	mkdir -p $(PREFIX)/lib
	mkdir -p $(PREFIX)/include
	cp -f lib/$(LIB) $(PREFIX)/lib
	cp -f include/ssum.1.h $(PREFIX)/include
	@echo
	@echo "Make sure you add this to your .bashrc: (so other projects can use this library)"
	@echo
	@echo "export LD_LIBRARY_PATH=\$${HOME}/local/.lib/:\$${LD_LIBRARY_PATH}"
	@echo "export CPATH=\$${HOME}/.local/include:\$${CPATH}"
	@echo "export LIBRARY_PATH=\$${HOME}/.local/lib:\$${LIBRARY_PATH}"
	@echo

.PHONY:
$(LIB):
	$(MAKE) -C ./lib shared-library

.PHONY:
$(LIB_OBJS):
	$(MAKE) -C ./lib objs

.PHONY:
without-lib: $(OBJS) $(LIB_OBJS)
	$(CC) $(CFLAGS) $(OBJS) $(LIB_OBJS) -o $(TARGET) $(LDFLAGS)

.PHONY:
%.o: %.c
	$(CC) $(CFLAGS) $(DEFINE_FLAGS) -I./include -o $@ -c $< $(LDFLAGS)

.PHONY:
test: $(TARGET)
	@bash ./run-tests

.PHONY:
install: $(TARGET)
	mkdir -p $(PREFIX)/bin
	cp -f $(TARGET) $(PREFIX)/bin

.PHONY:
clean:
	rm -f $(TARGET) $(OBJS)
	$(MAKE) -C ./lib clean

.PHONY:
gpack-package: clean $(LIB) without-lib
	mkdir -p ./gpack-package/lib-$(TARGET)/$(TARGET_VERSION)/lib
	mkdir -p ./gpack-package/lib-$(TARGET)/$(TARGET_VERSION)/include
	cp -f ./lib/$(LIB) ./gpack-package/lib-$(TARGET)/$(TARGET_VERSION)/lib
	cp -f ./include/ssum.1.h ./gpack-package/lib-$(TARGET)/$(TARGET_VERSION)/include
	
	mkdir -p ./gpack-package/$(TARGET)/$(TARGET_VERSION)/bin
	cp -f $(TARGET) ./gpack-package/$(TARGET)/$(TARGET_VERSION)/bin
	
	# TODO: fix arch in configure
	tar -czf ./gpack-package/$(TARGET)-v$(TARGET_VERSION)-x86_64_linux.tar.gz ./gpack-package/$(TARGET)
	sha256sum ./gpack-package/$(TARGET)-v$(TARGET_VERSION)-x86_64_linux.tar.gz

.PHONY:
uninstall: $(PREFIX)/$(TARGET)
	rm -f $(PREFIX)/$(TARGET)

#
# End Makefile.in
#
